version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: aaec
    docker:
      - image: docker:20.10.14-git

orbs:
  ruby: circleci/ruby@2.1.1
  browser-tools: circleci/browser-tools@1.4.7
  coveralls: coveralls/coveralls@1.0.6

jobs:
  build:
    docker:
      - image: cimg/ruby:3.3.3

    environment:
      BUNDLE_PATH: vendor/bundle
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      RAILS_ENV: test
      RACK_ENV: test
      SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      WORKING_PATH: /tmp
      UPLOAD_PATH: /tmp
      CACHE_PATH: /tmp/cache
      COVERALLS_PARALLEL: true

    working_directory: ~/aaec

    steps:
      - checkout
      - browser-tools/install-browser-tools

      # Restore caches early, before any installations
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - restore_cache:
          keys:
            - nvm-node-{{ checksum ".nvmrc" }}
            - nvm-node-

      # NVM and Node.js setup
      - run:
          name: Install NVM and Node.js
          command: |
            curl --retry 5 --retry-delay 10 -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --install' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> $BASH_ENV
            source $BASH_ENV
            nvm install $(cat .nvmrc)
            nvm use $(cat .nvmrc)
            echo "Node.js version: $(node --version)"

      # Save the NVM/Node.js cache after installation
      - save_cache:
          paths:
            - ~/.nvm/versions/node
          key: nvm-node-{{ checksum ".nvmrc" }}

      # Install Bundler and Ruby dependencies
      - run:
          name: Install Dependencies
          command: |
            source $BASH_ENV
            nvm use
            bundle install
            sudo apt-get update
            sudo apt-get install xvfb libfontconfig

      # Save the Bundler cache after installation
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Rubocop
      - run:
          name: Rubocop
          command: |
            gem install rubocop
            bundle exec rubocop

      # Brakeman
      - run:
          name: Run Brakeman
          command: bundle exec brakeman -q -w 2

      # Bundler-audit
      - run:
          name: Install Bundler-audit
          command: gem install bundler-audit
      - run:
          name: Run Bundle-audit
          command: bundle exec bundle audit check --update

      # Run tests
      - run:
          name: Run Rspec in parallel
          command: |
            mkdir /tmp/test-results
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - coveralls/upload:
          parallel_finished: true
          path_to_lcov: /home/circleci/aaec/coverage/lcov/aaec.lcov

workflows:
  version: 2
  ci:
    jobs:
      - build
